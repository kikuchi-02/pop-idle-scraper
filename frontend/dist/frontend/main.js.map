{"version":3,"sources":["./src/app/services/util.service.ts","./src/environments/environment.ts","./src/app/interceptors/authentication.interceptor.ts","./src/app/shared/magazine/magazine.component.ts","./src/app/shared/magazine/magazine.component.html","./src/app/interceptors/index.ts","./src/app/shared/shared.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/authentication.service.ts","./src/app/guards/authentication.guard.ts","./src/app/shared/idle-switcher/idle-switcher.component.ts","./src/app/shared/idle-switcher/idle-switcher.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { IdleKind, Magazine, Member } from './../typing';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UtilService {\n  constructor(private http: HttpClient) {}\n\n  getMemberTable(idle: IdleKind): Observable<object[][]> {\n    return this.http.get<Member[]>(`api/v1/member-table?kind=${idle}`).pipe(\n      catchError((err) => {\n        console.error(err);\n        return of(undefined);\n      })\n    );\n  }\n\n  getMagazines(date: string): Observable<Magazine[][]> {\n    return this.http.get<Magazine[][]>(`api/v1/magazines?date=${date}`).pipe(\n      catchError((err) => {\n        console.error(err);\n        return of(undefined);\n      })\n    );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  WS_PORT: 8081,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Injectable()\nexport class AuthenticationInterceptor implements HttpInterceptor {\n  constructor(private authenticationService: AuthenticationService) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    const authReq = request.clone({\n      headers: request.headers.set(\n        'Authorization',\n        `Bearer ${this.authenticationService.access}`\n      ),\n    });\n    return next.handle(authReq);\n  }\n}\n","import {\n  Component,\n  OnInit,\n  OnDestroy,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Input,\n} from '@angular/core';\nimport { ReplaySubject, Subject } from 'rxjs';\nimport { distinctUntilChanged, switchMap, takeUntil } from 'rxjs/operators';\nimport { Magazine } from '../../typing';\nimport { UtilService } from '../../services/util.service';\n\n@Component({\n  selector: 'app-magazine',\n  templateUrl: './magazine.component.html',\n  styleUrls: ['./magazine.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MagazineComponent implements OnInit, OnDestroy {\n  magazineGroups: Magazine[][];\n\n  dateSubject$ = new ReplaySubject<Date>();\n\n  private unsubscriber$: Subject<void> = new Subject<void>();\n\n  constructor(private utilService: UtilService, private cd: ChangeDetectorRef) {\n    this.dateSubject$\n      .pipe(\n        distinctUntilChanged(),\n        switchMap((targetDate) => {\n          const dateString = this.dateToString(targetDate);\n          return this.utilService.getMagazines(dateString);\n        }),\n        takeUntil(this.unsubscriber$)\n      )\n      .subscribe((magazineGroups) => {\n        this.magazineGroups = magazineGroups;\n        this.cd.markForCheck();\n      });\n  }\n\n  @Input() set date(d: string | Date | number) {\n    if (!d) {\n      return;\n    }\n    const target = new Date(d);\n    this.dateSubject$.next(target);\n  }\n\n  ngOnInit(): void {}\n\n  ngOnDestroy(): void {\n    this.unsubscriber$.next();\n  }\n\n  dateToString(date: Date): string {\n    return `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`;\n  }\n\n  notPublished(groups: Magazine[][]): boolean {\n    return !!groups && groups.every((group) => group.length === 0);\n  }\n}\n","<p class=\"magazine-title\">{{ dateSubject$ | async | date: 'M/d(E)' }}</p>\n<div class=\"magazine-group\" *ngFor=\"let group of magazineGroups; index as i\">\n  <!-- <div>優先度{{ i + 1 }}</div> -->\n  <ul class=\"magazine-group-list\" *ngIf=\"group.length > 0\">\n    <li class=\"magazine-group-detail\" *ngFor=\"let magazine of group\">\n      <a [href]=\"magazine.link\" target=\"_blank\">\n        {{ magazine.title }}\n      </a>\n    </li>\n  </ul>\n</div>\n<ng-template #noMagazines> 発売なし </ng-template>\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthenticationInterceptor } from './authentication.interceptor';\n\nexport const httpInterceptorProviders = [\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: AuthenticationInterceptor,\n    multi: true,\n  },\n];\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { IdleSwitcherComponent } from './idle-switcher/idle-switcher.component';\nimport { MagazineComponent } from './magazine/magazine.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, MatCheckboxModule],\n  declarations: [IdleSwitcherComponent, MagazineComponent],\n  exports: [IdleSwitcherComponent, MagazineComponent],\n})\nexport class SharedModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent {\n  constructor(private titleService: Title) {\n    this.titleService.setTitle('アイドル情報まとめ');\n  }\n}\n","<header>\n  <mat-toolbar color=\"primary\">\n    <div class=\"toolbar-inner\">\n      <h1><a routerLink=\"/home\">アイドル情報まとめ</a></h1>\n      <div class=\"toolbar-inner__links\">\n        <div class=\"toolbar-inner__links-link\">\n          <a routerLink=\"/members\">members</a>\n        </div>\n        <div class=\"toolbar-inner__links-link\">\n          <a routerLink=\"/google-search\">search</a>\n        </div>\n        <div class=\"toolbar-inner__links-link\">\n          <a routerLink=\"/subtitle\">subtitle</a>\n        </div>\n        <div class=\"toolbar-inner__links-link\">\n          <a routerLink=\"/scripts\">scripts</a>\n        </div>\n      </div>\n    </div>\n  </mat-toolbar>\n</header>\n<main>\n  <router-outlet></router-outlet>\n</main>\n<footer></footer>\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { httpInterceptorProviders } from './interceptors';\nimport { UtilService } from './services/util.service';\nimport { SharedModule } from './shared/shared.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    SharedModule,\n    MatToolbarModule,\n  ],\n  providers: [UtilService, httpInterceptorProviders],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, of, throwError } from 'rxjs';\nimport { mergeMap, tap } from 'rxjs/operators';\nimport { User } from '../typing';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthenticationService {\n  get access(): string {\n    return localStorage.getItem('access');\n  }\n  set access(t: string) {\n    localStorage.setItem('access', t);\n  }\n  get refresh(): string {\n    return localStorage.getItem('refresh');\n  }\n  set refresh(t: string) {\n    localStorage.setItem('refresh', t);\n  }\n\n  public redirectUrl: string;\n  public user: User;\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  login(email: string, password: string): Observable<void> {\n    return this.http\n      .post<{ access: string; refresh: string; user: User }>(\n        '/api/auth/login',\n        {\n          email,\n          password,\n        }\n      )\n      .pipe(\n        mergeMap(\n          ({\n            access,\n            refresh,\n            user,\n          }: {\n            access: string;\n            refresh: string;\n            user: User;\n          }) => {\n            this.access = access;\n            this.refresh = refresh;\n            this.user = user;\n            return of(void 0);\n          }\n        ),\n        tap(() => {\n          if (this.redirectUrl) {\n            this.router.navigate([this.redirectUrl]);\n            this.redirectUrl = null;\n          } else {\n            this.router.navigate(['/']);\n          }\n        })\n      );\n  }\n\n  tokenRefresh(): Observable<void> {\n    if (!this.refresh) {\n      return throwError({ error: true, message: 'no refresh token' });\n    }\n\n    return this.http\n      .post<{ access: string; refresh: string; user: User }>(\n        '/api/auth/refresh',\n        {\n          refresh: this.refresh,\n        }\n      )\n      .pipe(\n        mergeMap(\n          ({\n            access,\n            refresh,\n            user,\n          }: {\n            access: string;\n            refresh: string;\n            user: User;\n          }) => {\n            this.access = access;\n            this.refresh = refresh;\n            this.user = user;\n\n            return of(void 0);\n          }\n        )\n      );\n  }\n\n  logout(): void {\n    this.access = undefined;\n    this.refresh = undefined;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthenticationGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    this.authenticationService.redirectUrl = state.url;\n\n    return this.authenticationService.tokenRefresh().pipe(\n      map(() => {\n        this.authenticationService.redirectUrl = null;\n        return true;\n      }),\n      catchError((e) => {\n        this.router.navigate(['/login']);\n        return of(false);\n      })\n    );\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { IdleKind, IdleSwitchState } from '../../typing';\n\n@Component({\n  selector: 'app-idle-switcher',\n  templateUrl: './idle-switcher.component.html',\n  styleUrls: ['./idle-switcher.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class IdleSwitcherComponent implements OnInit {\n  @Input()\n  value: IdleSwitchState;\n\n  @Output()\n  changed = new EventEmitter<IdleSwitchState>();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  checkboxChange(event, idle: IdleKind): void {\n    switch (idle) {\n      case 'nogizaka':\n        this.value.nogizakaCheck = event;\n        break;\n      case 'sakurazaka':\n        this.value.sakurazakaCheck = event;\n        break;\n      case 'hinatazaka':\n        this.value.hinatazakaCheck = event;\n        break;\n      default:\n        break;\n    }\n    this.changed.next(this.value);\n  }\n}\n","<ng-container *ngIf=\"!!value\">\n  <label\n    ><mat-checkbox\n      color=\"primary\"\n      [ngModel]=\"value.nogizakaCheck\"\n      (ngModelChange)=\"checkboxChange($event, 'nogizaka')\"\n      >乃木坂46</mat-checkbox\n    ></label\n  >\n  <label\n    ><mat-checkbox\n      color=\"primary\"\n      [ngModel]=\"value.sakurazakaCheck\"\n      (ngModelChange)=\"checkboxChange($event, 'sakurazaka')\"\n      >櫻坂46</mat-checkbox\n    ></label\n  >\n  <label\n    ><mat-checkbox\n      color=\"primary\"\n      [ngModel]=\"value.hinatazakaCheck\"\n      (ngModelChange)=\"checkboxChange($event, 'hinatazaka')\"\n      >日向坂46</mat-checkbox\n    ></label\n  >\n</ng-container>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthenticationGuard } from './guards/authentication.guard';\n\nconst routes: Routes = [\n  {\n    path: 'members',\n    loadChildren: () =>\n      import('./member/member.module').then((m) => m.MemberModule),\n  },\n  {\n    path: 'home',\n    loadChildren: () => import('./home/home.module').then((m) => m.HomeModule),\n  },\n  {\n    path: 'google-search',\n    loadChildren: () =>\n      import('./google-search/google-search.module').then(\n        (m) => m.GoogleSearchModule\n      ),\n  },\n  {\n    path: 'subtitle',\n    loadChildren: () =>\n      import('./subtitle/subtitle.module').then((m) => m.SubtitleModule),\n  },\n  {\n    path: 'login',\n    loadChildren: () =>\n      import('./login/login.module').then((m) => m.LoginModule),\n  },\n  {\n    path: 'scripts',\n    loadChildren: () =>\n      import('./scripts/scripts.module').then((m) => m.ScriptsModule),\n    canActivate: [AuthenticationGuard],\n  },\n  {\n    path: '**',\n    redirectTo: 'home',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}