{"version":3,"sources":["./src/app/login/login.module.ts","./src/app/login/login-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login.component';\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatButtonModule,\n  ],\n})\nexport class LoginModule {}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login.component';\n\nconst routes: Routes = [{ path: '', component: LoginComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginRoutingModule {}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  form: FormGroup;\n  loginInvalid = false;\n\n  private unsubscriber$ = new Subject<void>();\n\n  constructor(\n    private fb: FormBuilder,\n    private cd: ChangeDetectorRef,\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {\n    this.form = this.fb.group({\n      email: ['', Validators.email],\n      password: ['', Validators.required],\n    });\n  }\n\n  ngOnInit(): void {}\n\n  ngOnDestroy(): void {\n    this.unsubscriber$.next();\n  }\n\n  onSubmit(): void {\n    if (!this.form.valid) {\n    }\n    const email = this.form.get('email').value;\n    const password = this.form.get('password').value;\n    this.authenticationService\n      .login(email, password)\n      .pipe(takeUntil(this.unsubscriber$))\n      .subscribe({\n        next: () => {},\n        error: (err) => {\n          this.loginInvalid = true;\n          this.cd.markForCheck();\n        },\n      });\n  }\n}\n","<div class=\"wrapper\">\n  <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n    <h2>Log In</h2>\n    <mat-error *ngIf=\"loginInvalid\">\n      The email and password were not recognized\n    </mat-error>\n    <mat-form-field>\n      <input matInput placeholder=\"Email\" formControlName=\"email\" required />\n      <mat-error> Please provide a valid email address </mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <input\n        matInput\n        type=\"password\"\n        placeholder=\"Password\"\n        formControlName=\"password\"\n        required\n      />\n      <mat-error> Please provide a valid password </mat-error>\n    </mat-form-field>\n    <button mat-raised-button color=\"primary\">Login</button>\n  </form>\n</div>\n"],"sourceRoot":"webpack:///"}